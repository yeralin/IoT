import { StateMachine, EventObject, Typestate } from './types';
export { StateMachine, EventObject };
export declare function assign(assignment: any): StateMachine.ActionObject<any, any>;
export declare function createMachine<TContext extends object, TEvent extends EventObject = EventObject, TState extends Typestate<TContext> = any>(fsmConfig: StateMachine.Config<TContext, TEvent>): StateMachine.Machine<TContext, TEvent, TState>;
export declare function interpret<TContext, TEvent extends EventObject = any, TState extends Typestate<TContext> = any>(machine: StateMachine.Machine<TContext, TEvent, TState>): StateMachine.Service<TContext, TEvent, TState>;
//# sourceMappingURL=index.d.ts.map