esphome:
  name: smart_fountain
  platform: ESP32
  board: nodemcu-32s


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

# Enable logging
logger:

ota:

globals:
  - id: is_fountain_broken
    type: bool
    initial_value: 'false'
  - id: refill_loops
    type: int
    initial_value: '0'

script:
  - id: refill
    then:
      - switch.turn_on: water_pump
      - while:
          condition:
            and:
              - lambda: return id(refill_loops) < 10;
              - binary_sensor.is_off: water_level
          then:
            - delay: 5s
            - lambda: id(refill_loops) += 1;
            - logger.log:
                format: "%d"
                args: ['id(refill_loops)']
      - switch.turn_off: water_pump
      - lambda: |-
          id(is_fountain_broken) = id(refill_loops) >= 10;
          id(refill_loops) = 0;

api:
  reboot_timeout: 0s
  services:
    - service: refill_water
      then:
        - script.execute: refill

switch:
  - platform: gpio
    pin: GPIO25
    id: water_pump
    restore_mode: ALWAYS_OFF

sensor:
  - platform: template
    name: "Is fountain broken"
    lambda: return id(is_fountain_broken);

binary_sensor:
  - platform: gpio
    pin: GPIO26
    name: "Water level reached"
    id: water_level
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms

interval:
  - interval: 3h
    then:
      - if:
          condition:
            - lambda: return !id(is_fountain_broken);
          then:
            - script.execute: refill
