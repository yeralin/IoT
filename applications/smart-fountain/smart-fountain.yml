esphome:
  name: smart_fountain
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

# Enable logging
logger:

ota:

globals:
  # interval component gets triggered at boot
  - id: first_boot
    type: bool
    initial_value: 'true'
  # Safety break, stop refilling after 10 minutes
  - id: refill_loops
    type: int
    initial_value: '0'
  - id: is_refill_broken
    type: bool
    initial_value: 'false'

script:
  - id: refill
    then:
      - switch.turn_on: water_pump
      - while:
          condition:
            and:
              - binary_sensor.is_off: water_level
              - lambda: return id(refill_loops) < 60;
          then:
            - delay: 10s
            - lambda: id(refill_loops) += 1;
      - delay: 10s # Overfill to prevent jittery sensor
      - switch.turn_off: water_pump
      - lambda: |-
          if (!id(water_level).state) {
            id(is_refill_broken) = true;
          }
          id(refill_loops) = 0;

switch:
  - platform: gpio
    pin: D7
    id: water_pump
    restore_mode: ALWAYS_OFF

binary_sensor:
  - platform: gpio
    pin: D8
    name: "Water level reached"
    id: water_level
    filters:
      - delayed_on: 5s
      - delayed_off: 5s

api:
  reboot_timeout: 0s
  services:
    - service: refill_water
      then:
        - script.execute: refill
      
interval:
  - interval: 24h
    then:
      - if:
          condition:
            and:
              - lambda: return !id(first_boot);
              - lambda: return !id(is_refill_broken);
              - binary_sensor.is_off: water_level
          then:
            - script.execute: refill
          else:
            - lambda: id(first_boot) = false;
