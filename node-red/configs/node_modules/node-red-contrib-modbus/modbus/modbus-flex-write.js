"use strict";module.exports=function(a){require("source-map-support").install();var o=require("./modbus-basics"),r=require("./core/modbus-core"),d=require("debug")("contribModbus:flex:write");a.nodes.registerType("modbus-flex-write",function(e){a.nodes.createNode(this,e),this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors;var s=this;s.bufferMessageList=new Map,o.setNodeStatusTo("waiting",s);var t=a.nodes.getNode(e.server);t&&(t.registerForModbus(s),o.initModbusClientEvents(s,t),s.onModbusWriteDone=function(e,a){s.showStatusActivities&&o.setNodeStatusTo("writing done",s),s.send(r.buildMessage(s.bufferMessageList,a.payload,e,a))},s.onModbusWriteError=function(e,a){d(e.message),s.showErrors&&s.error(e,a),o.setModbusError(s,t,e,r.getOriginalMessage(s.bufferMessageList,a))},s.on("input",function(a){if(!o.invalidPayloadIn(a)&&t.client){try{if("string"==typeof a.payload&&(a.payload=JSON.parse(a.payload)),a.payload.fc=parseInt(a.payload.fc),a.payload.unitid=parseInt(a.payload.unitid),a.payload.address=parseInt(a.payload.address),a.payload.quantity=parseInt(a.payload.quantity),!Number.isInteger(a.payload.fc)||5!==a.payload.fc&&6!==a.payload.fc&&15!==a.payload.fc&&16!==a.payload.fc)return void s.error("FC Not Valid",a);if(!(Number.isInteger(a.payload.address)&&0<=a.payload.address&&a.payload.address<=65535))return void s.error("Address Not Valid",a);if(!(Number.isInteger(a.payload.quantity)&&1<=a.payload.quantity&&a.payload.quantity<=65535))return void s.error("Quantity Not Valid",a);Object.prototype.hasOwnProperty.call(a.payload,"value")&&"string"==typeof a.payload.value&&("true"===a.payload.value||"false"===a.payload.value?a.payload.value="true"===a.payload.value:-1<a.payload.value.indexOf(",")&&(a.payload.value=JSON.parse(a.payload.value))),a.messageId=r.getObjectId(),s.bufferMessageList.set(a.messageId,a),a={topic:a.topic||s.id,payload:{value:a.payload.value||a.value,unitid:a.payload.unitid,fc:a.payload.fc,address:a.payload.address,quantity:a.payload.quantity,messageId:a.messageId},_msgid:a._msgid},t.emit("writeModbus",a,s.onModbusWriteDone,s.onModbusWriteError)}catch(e){d(e.message),s.showErrors&&s.error(e,a)}s.showStatusActivities&&o.setNodeStatusTo(t.actualServiceState,s)}}),s.on("close",function(e){o.setNodeStatusTo("closed",s),s.bufferMessageList.clear(),t.deregisterForModbus(s,e)}))})};
//# sourceMappingURL=maps/modbus-flex-write.js.map
