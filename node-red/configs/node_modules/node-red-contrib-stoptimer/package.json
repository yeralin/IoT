{
  "_from": "node-red-contrib-stoptimer@0.0.7",
  "_id": "node-red-contrib-stoptimer@0.0.7",
  "_inBundle": false,
  "_integrity": "sha1-dkBOyj+RJMvd6Aao1A45jYfH4g8=",
  "_location": "/node-red-contrib-stoptimer",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "node-red-contrib-stoptimer@0.0.7",
    "name": "node-red-contrib-stoptimer",
    "escapedName": "node-red-contrib-stoptimer",
    "rawSpec": "0.0.7",
    "saveSpec": null,
    "fetchSpec": "0.0.7"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-red-contrib-stoptimer/-/node-red-contrib-stoptimer-0.0.7.tgz",
  "_shasum": "76404eca3f9124cbdde806a8d40e398d87c7e20f",
  "_spec": "node-red-contrib-stoptimer@0.0.7",
  "_where": "/home/daniyar/system/node-red/configs",
  "author": {
    "name": "jbardi"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Sends the msg through the first output after the set timer duration. If a new msg is received before the timer has ended, it will replace the existing msg and the timer will be restarted, unless the new msg has a payload of 'stop' or 'STOP', in which case it will stop the timer. The second output allows you to send an additional payload of a number, string or boolean. If the timer is stopped, the second output will automatically send a payload of 'stopped'.",
  "directories": {},
  "keywords": [
    "node-red",
    "timer",
    "delay"
  ],
  "license": "Apache-2.0",
  "main": "stoptimer.js",
  "name": "node-red-contrib-stoptimer",
  "node-red": {
    "nodes": {
      "stoptimer": "stoptimer.js"
    }
  },
  "scripts": {},
  "version": "0.0.7"
}
